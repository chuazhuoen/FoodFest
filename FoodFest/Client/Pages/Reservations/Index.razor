@page "/reservations/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@inject HttpInterceptorService _interceptor
@implements IDisposable


<h3 class="card-title">Food Reservations</h3>
<br />

<a href="/reservations/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Reservation
</a>
<br />
<br />

@if (Reservations == null)
{
    <div class="alert alert-info">Loading Reservations...</div>
}
else
{
    <table class="table table-responsive" id="reservationsTable">
        <thead>
            <tr>
                <th>Restaurant</th>
                <th>Number of People</th>
                <th>Date and Time</th>
                <th>Seating</th>

                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservation in Reservations)
            {
            <tr>
                <td>@reservation.RName</td>
                <td>@reservation.People</td>
                <td>@reservation.ReserveDateTime.Date.ToString("dd MMMM yyyy")</td>
                @if (reservation.People <= 2)
                {
                    <td>
                        <a href="/twopeoplereservations/" class="btn btn-dark">
                            <span class="oi oi-arrow-right"></span>
                        </a>
                    </td>
                }
                else
                {
                    <td>
                        <a href="/fivepeoplereservations/" class="btn btn-dark">
                            <span class="oi oi-arrow-right"></span>
                        </a>
                    </td>
                }

                <td>
                    <a href="/reservations/view/@reservation.ID" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/reservations/edit/@reservation.ID" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(reservation.ID))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {



    private List<Reservation> Reservations;
    private List<FivePeopleReservation> FivePeopleReservations;
    private List<TwoPeopleReservation> TwoPeopleReservations;
    private List<FivePeopleTable> FivePeopleTables;
    private List<TwoPeopleTable> TwoPeopleTables;


    protected async override Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        Reservations = await _client.GetFromJsonAsync<List<Reservation>>($"{Endpoints.ReservationsEndpoint}");
    }

    async Task Delete(int reservationId)
    {
        var reservation = Reservations.First(q => q.ID == reservationId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {reservation.ID}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ReservationsEndpoint}/{reservationId}");
            await OnInitializedAsync();
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#reservationsTable");
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#reservationsTable");
    }

}
